{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Dy-ngKQNSjbvLSnW9IYEw7uWEdMIUFgq","timestamp":1729713437883},{"file_id":"1OiHTrqHFB4BjQ4f7IPOxietIlC52S_-i","timestamp":1729710879543},{"file_id":"1iai0MKDIBpG8pBwceGufqM_mQrDGZK7p","timestamp":1729633654784},{"file_id":"1wthMRVFFFGVjNES7VdM8WmkjT1qoCcMK","timestamp":1729632597533},{"file_id":"1EuTB-NizY2iH3JrbCqFE3YPuNjKEQw8-","timestamp":1729622886260}],"gpuType":"T4","authorship_tag":"ABX9TyM5+CVHY6tJaIcPWpuwiyXj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"boX8ZPtfYMuE","executionInfo":{"status":"ok","timestamp":1732037219354,"user_tz":300,"elapsed":22252,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"633fa567-e3dc-4449-f56e-61b6bf2bd7b2"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mQzpyzneXrW8","executionInfo":{"status":"ok","timestamp":1732037226313,"user_tz":300,"elapsed":4824,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"7e9b4a95-7af3-4e92-dc23-6ed93960f865"},"outputs":[{"output_type":"stream","name":"stdout","text":["Train DataFrame:\n","                                             filename   id eye Diagnosis\n","2   /content/drive/My Drive/Proyecto de Grado G/Pr...  004  OD         1\n","3   /content/drive/My Drive/Proyecto de Grado G/Pr...  004  OS         1\n","4   /content/drive/My Drive/Proyecto de Grado G/Pr...  005  OD         1\n","5   /content/drive/My Drive/Proyecto de Grado G/Pr...  005  OS         1\n","14  /content/drive/My Drive/Proyecto de Grado G/Pr...  010  OD         1\n","\n","Test DataFrame:\n","                                             filename   id eye Diagnosis\n","20  /content/drive/My Drive/Proyecto de Grado G/Pr...  015  OD         1\n","21  /content/drive/My Drive/Proyecto de Grado G/Pr...  015  OS         1\n","32  /content/drive/My Drive/Proyecto de Grado G/Pr...  023  OD         1\n","33  /content/drive/My Drive/Proyecto de Grado G/Pr...  023  OS         1\n","42  /content/drive/My Drive/Proyecto de Grado G/Pr...  028  OD         0\n"]}],"source":["import pandas as pd\n","from sklearn.model_selection import StratifiedShuffleSplit\n","import numpy as np\n","import os\n","\n","# Ruta al directorio con las imágenes\n","directorio_imagenes = '/content/drive/My Drive/Proyecto de Grado G/ProcessedImages_Disc_Exp2'\n","\n","imagenes_info = []\n","for filename in os.listdir(directorio_imagenes):\n","    if filename.endswith('.jpg') or filename.endswith('.png'):\n","        base = filename.split('_')[0]\n","        id_paciente = base[3:-2]  # Extrae correctamente el ID del paciente\n","        tipo_ojo = base[-2:]\n","        full_path = os.path.join(directorio_imagenes, filename)\n","        imagenes_info.append({'filename': full_path, 'id': id_paciente, 'eye': tipo_ojo})\n","\n","imagenes_df = pd.DataFrame(imagenes_info)\n","\n","# Cargar y preparar los datos clínicos\n","data_od = pd.read_excel('/content/drive/My Drive/Proyecto de Grado G/patient_data_od.xlsx')\n","data_os = pd.read_excel('/content/drive/My Drive/Proyecto de Grado G/patient_data_os.xlsx')\n","\n","data_od['id'] = data_od['Unnamed: 0'].str.replace('#', '').astype(str)\n","data_os['id'] = data_os['Unnamed: 0'].str.replace('#', '').astype(str)\n","\n","data_od['eye'] = 'OD'\n","data_os['eye'] = 'OS'\n","\n","data_clinica = pd.concat([data_od[['id', 'eye', 'Diagnosis']], data_os[['id', 'eye', 'Diagnosis']]])\n","\n","full_df = pd.merge(imagenes_df, data_clinica, on=['id', 'eye'], how='left')\n","full_df = full_df[full_df['Diagnosis'] != 2]\n","\n","dominant_diagnosis = full_df.groupby('id')['Diagnosis'].agg(lambda x: x.mode()[0])\n","\n","\n","patient_df = pd.DataFrame(dominant_diagnosis).reset_index()\n","\n","splitter = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\n","train_patients, test_patients = next(splitter.split(patient_df, patient_df['Diagnosis']))\n","\n","train_ids = patient_df.iloc[train_patients]['id']\n","test_ids = patient_df.iloc[test_patients]['id']\n","\n","train_df = full_df[full_df['id'].isin(train_ids)]\n","test_df = full_df[full_df['id'].isin(test_ids)]\n","\n","print(\"Train DataFrame:\")\n","print(train_df[['filename', 'id', 'eye', 'Diagnosis']].head())\n","\n","print(\"\\nTest DataFrame:\")\n","print(test_df[['filename', 'id', 'eye', 'Diagnosis']].head())"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import os\n","from tensorflow.keras.applications.inception_v3 import InceptionV3, preprocess_input\n","from tensorflow.keras.layers import GlobalAveragePooling2D, Dense, Input\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping\n","from sklearn.metrics import roc_auc_score\n","from sklearn.model_selection import StratifiedShuffleSplit\n","from sklearn.utils.class_weight import compute_class_weight\n","# Preparar los generadores de datos\n","train_datagen = ImageDataGenerator(\n","    preprocessing_function=preprocess_input,\n","    rotation_range=10,\n","    width_shift_range=0.2,\n","    height_shift_range=0.2,\n","    horizontal_flip=True,\n","    vertical_flip=False,\n","    fill_mode='nearest',\n","    validation_split = 0.2\n",")\n","\n","test_datagen = ImageDataGenerator(\n","    preprocessing_function=preprocess_input,\n",")\n","\n","train_df['Diagnosis'] = train_df['Diagnosis'].astype(str)\n","test_df['Diagnosis'] = test_df['Diagnosis'].astype(str)\n","\n","train_data = train_datagen.flow_from_dataframe(\n","    dataframe=train_df,\n","    x_col='filename',\n","    y_col='Diagnosis',\n","    target_size=(299, 299),\n","    batch_size=20,\n","    class_mode='binary'\n",")\n","\n","test_data = test_datagen.flow_from_dataframe(\n","    dataframe=test_df,\n","    x_col='filename',\n","    y_col='Diagnosis',\n","    target_size=(299, 299),\n","    batch_size=32,\n","    class_mode='binary'\n",")\n","\n","valid_data = test_datagen.flow_from_dataframe(\n","    dataframe=test_df,\n","    x_col='filename',\n","    y_col='Diagnosis',\n","    target_size=(299, 299),\n","    batch_size=32,\n","    class_mode='binary'\n",")\n"],"metadata":{"id":"4YD6q2Ue5XkZ","colab":{"base_uri":"https://localhost:8080/"},"outputId":"0cc37715-ff4e-4533-bb8c-ccd4b8175f28","executionInfo":{"status":"ok","timestamp":1732037233214,"user_tz":300,"elapsed":4153,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}}},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 335 validated image filenames belonging to 2 classes.\n","Found 84 validated image filenames belonging to 2 classes.\n","Found 84 validated image filenames belonging to 2 classes.\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-3-d2558d8b6ad4>:29: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  train_df['Diagnosis'] = train_df['Diagnosis'].astype(str)\n","<ipython-input-3-d2558d8b6ad4>:30: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_df['Diagnosis'] = test_df['Diagnosis'].astype(str)\n"]}]},{"cell_type":"code","source":["from sklearn.utils.class_weight import compute_class_weight\n","import pandas as pd\n","\n","# Convertir 'Diagnosis' de cadena a enteros\n","train_df['Diagnosis'] = train_df['Diagnosis'].astype(int)\n","test_df['Diagnosis'] = test_df['Diagnosis'].astype(int)\n","\n","# Verificar que la conversión fue exitosa\n","print(\"Valores únicos en 'Diagnosis' después de la conversión:\", train_df['Diagnosis'].unique())\n","\n","# Calcular los pesos de clases\n","class_weights = compute_class_weight(\n","    class_weight='balanced',\n","    classes=np.unique(train_df['Diagnosis']),\n","    y=train_df['Diagnosis']\n",")\n","class_weights = dict(enumerate(class_weights))\n","\n","print(\"Class weights:\", class_weights)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j6-13qP2n_02","executionInfo":{"status":"ok","timestamp":1732037234948,"user_tz":300,"elapsed":242,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"e2c878df-b89b-471e-a807-ec9c61a8caf2"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Valores únicos en 'Diagnosis' después de la conversión: [1 0]\n","Class weights: {0: 0.6320754716981132, 1: 2.392857142857143}\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-5d28dd34677d>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  train_df['Diagnosis'] = train_df['Diagnosis'].astype(int)\n","<ipython-input-4-5d28dd34677d>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_df['Diagnosis'] = test_df['Diagnosis'].astype(int)\n"]}]},{"cell_type":"code","source":["input_tensor = Input(shape=(299, 299, 3))\n","base_model = InceptionV3(input_tensor=input_tensor, weights='imagenet', include_top=False, pooling='avg')\n","\n","x = base_model.output\n","x = Dense(2048, activation='relu')(x)\n","predictions = Dense(1, activation='sigmoid')(x)\n","model = Model(inputs=base_model.input, outputs=predictions)\n","\n","for layer in base_model.layers:\n","    layer.trainable = False\n","\n","model.compile(optimizer=Adam(learning_rate=0.01), loss='binary_crossentropy')\n","\n","checkpoint = ModelCheckpoint('best_model_warmup.keras', monitor='val_loss', save_best_only=True, mode='min', verbose=1)\n","early_stop = EarlyStopping(monitor='val_loss', patience=25, restore_best_weights=True, mode='min')\n","\n","print(\"Inicio de Warm-Up Training...\\n\")\n","warmup_history = model.fit(\n","    train_data,\n","    validation_data=valid_data,\n","    epochs=50,\n","    callbacks=[checkpoint, early_stop],\n","    class_weight=class_weights\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RNcbG_WLm8Ma","executionInfo":{"status":"ok","timestamp":1732037822185,"user_tz":300,"elapsed":586020,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"6bf0392e-a88b-4f8b-f5bf-67d4b49654ca"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/inception_v3/inception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5\n","\u001b[1m87910968/87910968\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n","Inicio de Warm-Up Training...\n","\n","Epoch 1/50\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 942ms/step - loss: 17.8272\n","Epoch 1: val_loss improved from inf to 5.76870, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 2s/step - loss: 17.5704 - val_loss: 5.7687\n","Epoch 2/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 278ms/step - loss: 2.5382\n","Epoch 2: val_loss improved from 5.76870 to 0.54983, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 462ms/step - loss: 2.5193 - val_loss: 0.5498\n","Epoch 3/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 284ms/step - loss: 0.7880\n","Epoch 3: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 316ms/step - loss: 0.7916 - val_loss: 0.6026\n","Epoch 4/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 411ms/step - loss: 0.6809\n","Epoch 4: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 451ms/step - loss: 0.6816 - val_loss: 0.6582\n","Epoch 5/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 280ms/step - loss: 0.5360\n","Epoch 5: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 310ms/step - loss: 0.5377 - val_loss: 0.6120\n","Epoch 6/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.6070\n","Epoch 6: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 312ms/step - loss: 0.6047 - val_loss: 0.8115\n","Epoch 7/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 321ms/step - loss: 0.5158\n","Epoch 7: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 355ms/step - loss: 0.5153 - val_loss: 0.5536\n","Epoch 8/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.5244\n","Epoch 8: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 370ms/step - loss: 0.5252 - val_loss: 0.8553\n","Epoch 9/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.5075\n","Epoch 9: val_loss did not improve from 0.54983\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 314ms/step - loss: 0.5079 - val_loss: 0.8100\n","Epoch 10/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 0.4839\n","Epoch 10: val_loss improved from 0.54983 to 0.54749, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 495ms/step - loss: 0.4833 - val_loss: 0.5475\n","Epoch 11/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 308ms/step - loss: 0.4468\n","Epoch 11: val_loss did not improve from 0.54749\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 350ms/step - loss: 0.4555 - val_loss: 0.9151\n","Epoch 12/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.4961\n","Epoch 12: val_loss improved from 0.54749 to 0.50172, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 383ms/step - loss: 0.4952 - val_loss: 0.5017\n","Epoch 13/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 300ms/step - loss: 0.4244\n","Epoch 13: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 332ms/step - loss: 0.4273 - val_loss: 1.1457\n","Epoch 14/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 336ms/step - loss: 0.4581\n","Epoch 14: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 378ms/step - loss: 0.4572 - val_loss: 0.7123\n","Epoch 15/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 280ms/step - loss: 0.3716\n","Epoch 15: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 314ms/step - loss: 0.3730 - val_loss: 0.8454\n","Epoch 16/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 313ms/step - loss: 0.3782\n","Epoch 16: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 347ms/step - loss: 0.3780 - val_loss: 0.9314\n","Epoch 17/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 336ms/step - loss: 0.4022\n","Epoch 17: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 377ms/step - loss: 0.4008 - val_loss: 0.6193\n","Epoch 18/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.4176\n","Epoch 18: val_loss did not improve from 0.50172\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 324ms/step - loss: 0.4187 - val_loss: 0.7134\n","Epoch 19/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 274ms/step - loss: 0.3502\n","Epoch 19: val_loss improved from 0.50172 to 0.45661, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 378ms/step - loss: 0.3505 - val_loss: 0.4566\n","Epoch 20/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 316ms/step - loss: 1.3684\n","Epoch 20: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 351ms/step - loss: 1.3490 - val_loss: 0.5036\n","Epoch 21/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 335ms/step - loss: 0.5862\n","Epoch 21: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 415ms/step - loss: 0.5844 - val_loss: 0.4767\n","Epoch 22/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.4474\n","Epoch 22: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 314ms/step - loss: 0.4488 - val_loss: 0.9687\n","Epoch 23/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 276ms/step - loss: 0.4914\n","Epoch 23: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 309ms/step - loss: 0.4919 - val_loss: 0.4625\n","Epoch 24/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 370ms/step - loss: 0.4319\n","Epoch 24: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 404ms/step - loss: 0.4336 - val_loss: 0.8155\n","Epoch 25/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 276ms/step - loss: 0.4118\n","Epoch 25: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 306ms/step - loss: 0.4162 - val_loss: 0.8894\n","Epoch 26/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 281ms/step - loss: 0.4364\n","Epoch 26: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 317ms/step - loss: 0.4403 - val_loss: 0.9604\n","Epoch 27/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 368ms/step - loss: 0.4741\n","Epoch 27: val_loss did not improve from 0.45661\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 409ms/step - loss: 0.4749 - val_loss: 0.8308\n","Epoch 28/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 275ms/step - loss: 0.3982\n","Epoch 28: val_loss improved from 0.45661 to 0.42601, saving model to best_model_warmup.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 383ms/step - loss: 0.3975 - val_loss: 0.4260\n","Epoch 29/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.3729\n","Epoch 29: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 312ms/step - loss: 0.3797 - val_loss: 1.2257\n","Epoch 30/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 386ms/step - loss: 0.5421\n","Epoch 30: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 420ms/step - loss: 0.5407 - val_loss: 0.5000\n","Epoch 31/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 272ms/step - loss: 0.3582\n","Epoch 31: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 308ms/step - loss: 0.3589 - val_loss: 0.9158\n","Epoch 32/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.3726\n","Epoch 32: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 313ms/step - loss: 0.3735 - val_loss: 0.4858\n","Epoch 33/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 280ms/step - loss: 0.3499\n","Epoch 33: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 312ms/step - loss: 0.3504 - val_loss: 0.6142\n","Epoch 34/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 378ms/step - loss: 0.2414\n","Epoch 34: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 413ms/step - loss: 0.2441 - val_loss: 0.4796\n","Epoch 35/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 271ms/step - loss: 0.4387\n","Epoch 35: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 305ms/step - loss: 0.4375 - val_loss: 0.4322\n","Epoch 36/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 280ms/step - loss: 0.3646\n","Epoch 36: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 315ms/step - loss: 0.3627 - val_loss: 0.5682\n","Epoch 37/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 385ms/step - loss: 0.3753\n","Epoch 37: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 418ms/step - loss: 0.3741 - val_loss: 0.6887\n","Epoch 38/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 277ms/step - loss: 0.3368\n","Epoch 38: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 311ms/step - loss: 0.3391 - val_loss: 0.9374\n","Epoch 39/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 285ms/step - loss: 0.3580\n","Epoch 39: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 319ms/step - loss: 0.3574 - val_loss: 0.4532\n","Epoch 40/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 374ms/step - loss: 0.2900\n","Epoch 40: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 408ms/step - loss: 0.2929 - val_loss: 0.5352\n","Epoch 41/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 0.3417\n","Epoch 41: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 316ms/step - loss: 0.3399 - val_loss: 0.5464\n","Epoch 42/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.3006\n","Epoch 42: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 357ms/step - loss: 0.3004 - val_loss: 0.4550\n","Epoch 43/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 280ms/step - loss: 0.3957\n","Epoch 43: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 314ms/step - loss: 0.3980 - val_loss: 1.0554\n","Epoch 44/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 278ms/step - loss: 0.4290\n","Epoch 44: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 358ms/step - loss: 0.4287 - val_loss: 0.5013\n","Epoch 45/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 277ms/step - loss: 0.3953\n","Epoch 45: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 317ms/step - loss: 0.3976 - val_loss: 0.6473\n","Epoch 46/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 380ms/step - loss: 0.4693\n","Epoch 46: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 417ms/step - loss: 0.4702 - val_loss: 0.6487\n","Epoch 47/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.3143\n","Epoch 47: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 369ms/step - loss: 0.3166 - val_loss: 0.5696\n","Epoch 48/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 285ms/step - loss: 0.2765\n","Epoch 48: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 320ms/step - loss: 0.2773 - val_loss: 0.8513\n","Epoch 49/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 363ms/step - loss: 0.3596\n","Epoch 49: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 397ms/step - loss: 0.3609 - val_loss: 0.4507\n","Epoch 50/50\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 299ms/step - loss: 0.2258\n","Epoch 50: val_loss did not improve from 0.42601\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 366ms/step - loss: 0.2280 - val_loss: 0.6647\n"]}]},{"cell_type":"code","source":["from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","model.load_weights(\"best_model_warmup.keras\")\n","\n","for layer in base_model.layers:\n","    layer.trainable = True\n","\n","model.compile(optimizer=Adam(learning_rate=0.001), loss='binary_crossentropy')\n","\n","checkpoint_finetune_path = \"best_model_finetune.keras\"\n","checkpoint_finetune = ModelCheckpoint(\n","    checkpoint_finetune_path,\n","    save_best_only=True,\n","    monitor=\"val_loss\",\n","    mode='min',\n","    verbose=1\n",")\n","early_stopping = EarlyStopping(\n","    monitor='val_loss',\n","    patience=50,\n","    restore_best_weights=True,\n","    mode='min'\n",")\n","\n","print(\"Inicio de Fine-Tuning Training...\\n\")\n","history_finetune = model.fit(\n","    train_data,\n","    validation_data=valid_data,\n","    epochs=200,\n","    callbacks=[checkpoint_finetune, early_stopping],\n","    class_weight=class_weights\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kEOK8le1nAVq","executionInfo":{"status":"ok","timestamp":1732040289047,"user_tz":300,"elapsed":1112321,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"e8bd591b-e15e-4940-a9e5-e01b394ba7c2"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Inicio de Fine-Tuning Training...\n","\n","Epoch 1/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3s/step - loss: 1.6387\n","Epoch 1: val_loss improved from inf to 2244.26831, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m155s\u001b[0m 4s/step - loss: 1.6212 - val_loss: 2244.2683\n","Epoch 2/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 380ms/step - loss: 0.6630\n","Epoch 2: val_loss improved from 2244.26831 to 1038.89197, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 534ms/step - loss: 0.6651 - val_loss: 1038.8920\n","Epoch 3/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 389ms/step - loss: 0.6645\n","Epoch 3: val_loss improved from 1038.89197 to 115.47670, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 550ms/step - loss: 0.6658 - val_loss: 115.4767\n","Epoch 4/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 399ms/step - loss: 0.7176\n","Epoch 4: val_loss improved from 115.47670 to 16.18841, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 686ms/step - loss: 0.7155 - val_loss: 16.1884\n","Epoch 5/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 397ms/step - loss: 0.6457\n","Epoch 5: val_loss improved from 16.18841 to 0.52413, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 573ms/step - loss: 0.6459 - val_loss: 0.5241\n","Epoch 6/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 467ms/step - loss: 0.5784\n","Epoch 6: val_loss did not improve from 0.52413\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 500ms/step - loss: 0.5815 - val_loss: 0.5348\n","Epoch 7/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 389ms/step - loss: 0.6132\n","Epoch 7: val_loss improved from 0.52413 to 0.51902, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 564ms/step - loss: 0.6140 - val_loss: 0.5190\n","Epoch 8/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 500ms/step - loss: 0.5532\n","Epoch 8: val_loss did not improve from 0.51902\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 534ms/step - loss: 0.5548 - val_loss: 0.5657\n","Epoch 9/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 378ms/step - loss: 0.5904\n","Epoch 9: val_loss improved from 0.51902 to 0.43133, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 553ms/step - loss: 0.5890 - val_loss: 0.4313\n","Epoch 10/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 466ms/step - loss: 0.5589\n","Epoch 10: val_loss did not improve from 0.43133\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 500ms/step - loss: 0.5613 - val_loss: 0.5168\n","Epoch 11/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 382ms/step - loss: 0.5821\n","Epoch 11: val_loss improved from 0.43133 to 0.37620, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 612ms/step - loss: 0.5803 - val_loss: 0.3762\n","Epoch 12/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 380ms/step - loss: 0.4843\n","Epoch 12: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 460ms/step - loss: 0.4857 - val_loss: 0.4917\n","Epoch 13/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 383ms/step - loss: 0.4927\n","Epoch 13: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 417ms/step - loss: 0.4922 - val_loss: 0.4196\n","Epoch 14/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 409ms/step - loss: 0.3974\n","Epoch 14: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 442ms/step - loss: 0.3991 - val_loss: 0.5643\n","Epoch 15/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 401ms/step - loss: 0.4241\n","Epoch 15: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 482ms/step - loss: 0.4246 - val_loss: 0.6902\n","Epoch 16/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.3872\n","Epoch 16: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 414ms/step - loss: 0.3903 - val_loss: 1.2888\n","Epoch 17/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 434ms/step - loss: 0.4552\n","Epoch 17: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 469ms/step - loss: 0.4572 - val_loss: 9.2738\n","Epoch 18/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 399ms/step - loss: 0.4147\n","Epoch 18: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 432ms/step - loss: 0.4128 - val_loss: 10.7392\n","Epoch 19/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 428ms/step - loss: 0.4342\n","Epoch 19: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 464ms/step - loss: 0.4352 - val_loss: 1.2966\n","Epoch 20/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - loss: 0.4298\n","Epoch 20: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 526ms/step - loss: 0.4293 - val_loss: 16.3573\n","Epoch 21/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 462ms/step - loss: 0.3353\n","Epoch 21: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 495ms/step - loss: 0.3345 - val_loss: 2.2777\n","Epoch 22/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 397ms/step - loss: 0.2849\n","Epoch 22: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 432ms/step - loss: 0.2830 - val_loss: 0.6874\n","Epoch 23/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 429ms/step - loss: 0.4241\n","Epoch 23: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 466ms/step - loss: 0.4220 - val_loss: 0.6669\n","Epoch 24/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 479ms/step - loss: 0.2834\n","Epoch 24: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 511ms/step - loss: 0.2840 - val_loss: 1.4874\n","Epoch 25/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 388ms/step - loss: 0.3540\n","Epoch 25: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 430ms/step - loss: 0.3541 - val_loss: 0.9531\n","Epoch 26/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 397ms/step - loss: 0.2361\n","Epoch 26: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 433ms/step - loss: 0.2398 - val_loss: 0.7631\n","Epoch 27/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 492ms/step - loss: 0.3488\n","Epoch 27: val_loss did not improve from 0.37620\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 526ms/step - loss: 0.3510 - val_loss: 1.8047\n","Epoch 28/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 395ms/step - loss: 0.2526\n","Epoch 28: val_loss improved from 0.37620 to 0.35368, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 603ms/step - loss: 0.2506 - val_loss: 0.3537\n","Epoch 29/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 391ms/step - loss: 0.1583\n","Epoch 29: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 431ms/step - loss: 0.1570 - val_loss: 1.0799\n","Epoch 30/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 391ms/step - loss: 0.1998\n","Epoch 30: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 425ms/step - loss: 0.2070 - val_loss: 714.3694\n","Epoch 31/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 447ms/step - loss: 0.6396\n","Epoch 31: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 483ms/step - loss: 0.6357 - val_loss: 21983.5879\n","Epoch 32/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 495ms/step - loss: 0.4435\n","Epoch 32: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 527ms/step - loss: 0.4437 - val_loss: 539.4896\n","Epoch 33/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 390ms/step - loss: 0.3284\n","Epoch 33: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 425ms/step - loss: 0.3300 - val_loss: 4.4645\n","Epoch 34/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 479ms/step - loss: 0.3816\n","Epoch 34: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 511ms/step - loss: 0.3798 - val_loss: 2.0262\n","Epoch 35/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 428ms/step - loss: 0.2254\n","Epoch 35: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 462ms/step - loss: 0.2276 - val_loss: 38.3914\n","Epoch 36/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 392ms/step - loss: 0.2618\n","Epoch 36: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 473ms/step - loss: 0.2650 - val_loss: 4.9719\n","Epoch 37/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.2675\n","Epoch 37: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 414ms/step - loss: 0.2685 - val_loss: 3.1616\n","Epoch 38/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 400ms/step - loss: 0.4165\n","Epoch 38: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 434ms/step - loss: 0.4201 - val_loss: 17.6360\n","Epoch 39/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 485ms/step - loss: 0.5795\n","Epoch 39: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 521ms/step - loss: 0.5788 - val_loss: 184.9097\n","Epoch 40/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 427ms/step - loss: 0.4664\n","Epoch 40: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 461ms/step - loss: 0.4654 - val_loss: 57.7656\n","Epoch 41/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 391ms/step - loss: 0.4388\n","Epoch 41: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 471ms/step - loss: 0.4386 - val_loss: 2.9236\n","Epoch 42/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 388ms/step - loss: 0.4622\n","Epoch 42: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 421ms/step - loss: 0.4621 - val_loss: 6.5017\n","Epoch 43/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 484ms/step - loss: 0.3778\n","Epoch 43: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 518ms/step - loss: 0.3776 - val_loss: 1.2967\n","Epoch 44/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 461ms/step - loss: 0.2860\n","Epoch 44: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 494ms/step - loss: 0.2872 - val_loss: 0.5427\n","Epoch 45/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 387ms/step - loss: 0.2802\n","Epoch 45: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 420ms/step - loss: 0.2807 - val_loss: 0.7453\n","Epoch 46/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 426ms/step - loss: 0.2299\n","Epoch 46: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 459ms/step - loss: 0.2309 - val_loss: 0.8275\n","Epoch 47/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 401ms/step - loss: 0.1925\n","Epoch 47: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 446ms/step - loss: 0.1980 - val_loss: 0.6085\n","Epoch 48/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 389ms/step - loss: 0.2119\n","Epoch 48: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 424ms/step - loss: 0.2149 - val_loss: 0.7508\n","Epoch 49/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 455ms/step - loss: 0.2629\n","Epoch 49: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 490ms/step - loss: 0.2640 - val_loss: 0.4846\n","Epoch 50/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 386ms/step - loss: 0.2364\n","Epoch 50: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 430ms/step - loss: 0.2367 - val_loss: 0.4195\n","Epoch 51/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 406ms/step - loss: 0.1148\n","Epoch 51: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 440ms/step - loss: 0.1166 - val_loss: 0.6678\n","Epoch 52/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 427ms/step - loss: 0.1356\n","Epoch 52: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 466ms/step - loss: 0.1355 - val_loss: 0.4827\n","Epoch 53/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.1166\n","Epoch 53: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 418ms/step - loss: 0.1183 - val_loss: 0.9025\n","Epoch 54/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 452ms/step - loss: 0.2730\n","Epoch 54: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 485ms/step - loss: 0.2709 - val_loss: 0.4848\n","Epoch 55/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - loss: 0.1586\n","Epoch 55: val_loss did not improve from 0.35368\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 522ms/step - loss: 0.1583 - val_loss: 0.9782\n","Epoch 56/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 403ms/step - loss: 0.1948\n","Epoch 56: val_loss improved from 0.35368 to 0.34064, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 583ms/step - loss: 0.1949 - val_loss: 0.3406\n","Epoch 57/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 393ms/step - loss: 0.1529\n","Epoch 57: val_loss did not improve from 0.34064\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 428ms/step - loss: 0.1544 - val_loss: 0.7365\n","Epoch 58/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 466ms/step - loss: 0.1229\n","Epoch 58: val_loss did not improve from 0.34064\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 499ms/step - loss: 0.1235 - val_loss: 0.6153\n","Epoch 59/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 480ms/step - loss: 0.1197\n","Epoch 59: val_loss improved from 0.34064 to 0.31122, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 802ms/step - loss: 0.1201 - val_loss: 0.3112\n","Epoch 60/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 455ms/step - loss: 0.0965\n","Epoch 60: val_loss improved from 0.31122 to 0.30257, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 625ms/step - loss: 0.0981 - val_loss: 0.3026\n","Epoch 61/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 395ms/step - loss: 0.0823\n","Epoch 61: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 437ms/step - loss: 0.0849 - val_loss: 0.5247\n","Epoch 62/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 396ms/step - loss: 0.1904\n","Epoch 62: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 431ms/step - loss: 0.1891 - val_loss: 2.9293\n","Epoch 63/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 389ms/step - loss: 0.1975\n","Epoch 63: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 423ms/step - loss: 0.2011 - val_loss: 0.8116\n","Epoch 64/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 449ms/step - loss: 0.2546\n","Epoch 64: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 489ms/step - loss: 0.2533 - val_loss: 0.4408\n","Epoch 65/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 385ms/step - loss: 0.1366\n","Epoch 65: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 425ms/step - loss: 0.1379 - val_loss: 0.6570\n","Epoch 66/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.1105\n","Epoch 66: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 416ms/step - loss: 0.1108 - val_loss: 0.4064\n","Epoch 67/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 398ms/step - loss: 0.1319\n","Epoch 67: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 432ms/step - loss: 0.1316 - val_loss: 0.3995\n","Epoch 68/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 482ms/step - loss: 0.0932\n","Epoch 68: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 517ms/step - loss: 0.0939 - val_loss: 0.4773\n","Epoch 69/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 443ms/step - loss: 0.0940\n","Epoch 69: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 477ms/step - loss: 0.0953 - val_loss: 0.5931\n","Epoch 70/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 0.0591\n","Epoch 70: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 461ms/step - loss: 0.0596 - val_loss: 2.4120\n","Epoch 71/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 393ms/step - loss: 0.1052\n","Epoch 71: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 426ms/step - loss: 0.1039 - val_loss: 2.7831\n","Epoch 72/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 425ms/step - loss: 0.1544\n","Epoch 72: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 458ms/step - loss: 0.1522 - val_loss: 0.5267\n","Epoch 73/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 394ms/step - loss: 0.0846\n","Epoch 73: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 474ms/step - loss: 0.0862 - val_loss: 3.8308\n","Epoch 74/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 397ms/step - loss: 0.0920\n","Epoch 74: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 431ms/step - loss: 0.0935 - val_loss: 0.6812\n","Epoch 75/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 425ms/step - loss: 0.0866\n","Epoch 75: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 464ms/step - loss: 0.0879 - val_loss: 0.3319\n","Epoch 76/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.0851\n","Epoch 76: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 459ms/step - loss: 0.0858 - val_loss: 0.4186\n","Epoch 77/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 400ms/step - loss: 0.1552\n","Epoch 77: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 433ms/step - loss: 0.1575 - val_loss: 1.8259\n","Epoch 78/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 465ms/step - loss: 0.1283\n","Epoch 78: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 497ms/step - loss: 0.1309 - val_loss: 1.3703\n","Epoch 79/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 454ms/step - loss: 0.1131\n","Epoch 79: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 488ms/step - loss: 0.1147 - val_loss: 2.7926\n","Epoch 80/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.1006\n","Epoch 80: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 416ms/step - loss: 0.0999 - val_loss: 1.8206\n","Epoch 81/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 478ms/step - loss: 0.0899\n","Epoch 81: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 513ms/step - loss: 0.0900 - val_loss: 0.5942\n","Epoch 82/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 380ms/step - loss: 0.0763\n","Epoch 82: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 421ms/step - loss: 0.0759 - val_loss: 0.5671\n","Epoch 83/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 395ms/step - loss: 0.0578\n","Epoch 83: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 430ms/step - loss: 0.0583 - val_loss: 0.8674\n","Epoch 84/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 485ms/step - loss: 0.0602\n","Epoch 84: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 518ms/step - loss: 0.0611 - val_loss: 0.4155\n","Epoch 85/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 391ms/step - loss: 0.0666\n","Epoch 85: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 426ms/step - loss: 0.0679 - val_loss: 0.3963\n","Epoch 86/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.1136\n","Epoch 86: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 420ms/step - loss: 0.1125 - val_loss: 0.3310\n","Epoch 87/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 466ms/step - loss: 0.0287\n","Epoch 87: val_loss did not improve from 0.30257\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 500ms/step - loss: 0.0294 - val_loss: 0.5921\n","Epoch 88/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 477ms/step - loss: 0.0292\n","Epoch 88: val_loss improved from 0.30257 to 0.28052, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 690ms/step - loss: 0.0302 - val_loss: 0.2805\n","Epoch 89/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 478ms/step - loss: 0.0378\n","Epoch 89: val_loss improved from 0.28052 to 0.26323, saving model to best_model_finetune.keras\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 644ms/step - loss: 0.0388 - val_loss: 0.2632\n","Epoch 90/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - loss: 0.0249\n","Epoch 90: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 523ms/step - loss: 0.0253 - val_loss: 0.3779\n","Epoch 91/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.0302\n","Epoch 91: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 419ms/step - loss: 0.0304 - val_loss: 0.7614\n","Epoch 92/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 423ms/step - loss: 0.1074\n","Epoch 92: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 456ms/step - loss: 0.1090 - val_loss: 0.4562\n","Epoch 93/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 422ms/step - loss: 0.0725\n","Epoch 93: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 464ms/step - loss: 0.0733 - val_loss: 0.7980\n","Epoch 94/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 0.1910\n","Epoch 94: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 422ms/step - loss: 0.1887 - val_loss: 0.7685\n","Epoch 95/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 417ms/step - loss: 0.1069\n","Epoch 95: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 452ms/step - loss: 0.1066 - val_loss: 6.6879\n","Epoch 96/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 425ms/step - loss: 0.1345\n","Epoch 96: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 460ms/step - loss: 0.1335 - val_loss: 0.5448\n","Epoch 97/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 388ms/step - loss: 0.1287\n","Epoch 97: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 468ms/step - loss: 0.1271 - val_loss: 3.7082\n","Epoch 98/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.0692\n","Epoch 98: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 416ms/step - loss: 0.0696 - val_loss: 3.3381\n","Epoch 99/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 469ms/step - loss: 0.0759\n","Epoch 99: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 503ms/step - loss: 0.0775 - val_loss: 1.2491\n","Epoch 100/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 459ms/step - loss: 0.0516\n","Epoch 100: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 494ms/step - loss: 0.0531 - val_loss: 1.0859\n","Epoch 101/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.0507\n","Epoch 101: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 419ms/step - loss: 0.0512 - val_loss: 1.3580\n","Epoch 102/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 486ms/step - loss: 0.0470\n","Epoch 102: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 520ms/step - loss: 0.0475 - val_loss: 1.8957\n","Epoch 103/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 397ms/step - loss: 0.0499\n","Epoch 103: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 437ms/step - loss: 0.0496 - val_loss: 1.5757\n","Epoch 104/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 401ms/step - loss: 0.0638\n","Epoch 104: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 433ms/step - loss: 0.0632 - val_loss: 0.7594\n","Epoch 105/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 433ms/step - loss: 0.0830\n","Epoch 105: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 467ms/step - loss: 0.0829 - val_loss: 0.8013\n","Epoch 106/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 396ms/step - loss: 0.1061\n","Epoch 106: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 477ms/step - loss: 0.1090 - val_loss: 0.7162\n","Epoch 107/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 392ms/step - loss: 0.1745\n","Epoch 107: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 426ms/step - loss: 0.1744 - val_loss: 1.0023\n","Epoch 108/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 479ms/step - loss: 0.1194\n","Epoch 108: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 512ms/step - loss: 0.1182 - val_loss: 0.3895\n","Epoch 109/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 393ms/step - loss: 0.0739\n","Epoch 109: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 435ms/step - loss: 0.0754 - val_loss: 0.6320\n","Epoch 110/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 394ms/step - loss: 0.0792\n","Epoch 110: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 426ms/step - loss: 0.0798 - val_loss: 1.6746\n","Epoch 111/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 432ms/step - loss: 0.0823\n","Epoch 111: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 467ms/step - loss: 0.0825 - val_loss: 0.4790\n","Epoch 112/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 393ms/step - loss: 0.0506\n","Epoch 112: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 428ms/step - loss: 0.0508 - val_loss: 2.6309\n","Epoch 113/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 483ms/step - loss: 0.0710\n","Epoch 113: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 519ms/step - loss: 0.0708 - val_loss: 0.5586\n","Epoch 114/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 400ms/step - loss: 0.0372\n","Epoch 114: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 440ms/step - loss: 0.0379 - val_loss: 1.3926\n","Epoch 115/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 387ms/step - loss: 0.0845\n","Epoch 115: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 421ms/step - loss: 0.0873 - val_loss: 1.4387\n","Epoch 116/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 464ms/step - loss: 0.1913\n","Epoch 116: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 496ms/step - loss: 0.1897 - val_loss: 0.7307\n","Epoch 117/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 390ms/step - loss: 0.0802\n","Epoch 117: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 431ms/step - loss: 0.0811 - val_loss: 0.7935\n","Epoch 118/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 388ms/step - loss: 0.0937\n","Epoch 118: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 423ms/step - loss: 0.0935 - val_loss: 0.4851\n","Epoch 119/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 383ms/step - loss: 0.1216\n","Epoch 119: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 418ms/step - loss: 0.1209 - val_loss: 0.3676\n","Epoch 120/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 456ms/step - loss: 0.1430\n","Epoch 120: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 491ms/step - loss: 0.1416 - val_loss: 0.3749\n","Epoch 121/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 385ms/step - loss: 0.0687\n","Epoch 121: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 418ms/step - loss: 0.0696 - val_loss: 1.1041\n","Epoch 122/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 393ms/step - loss: 0.0639\n","Epoch 122: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 428ms/step - loss: 0.0646 - val_loss: 0.8092\n","Epoch 123/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 482ms/step - loss: 0.0560\n","Epoch 123: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 516ms/step - loss: 0.0558 - val_loss: 1.0183\n","Epoch 124/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 445ms/step - loss: 0.1192\n","Epoch 124: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 479ms/step - loss: 0.1182 - val_loss: 0.7237\n","Epoch 125/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 0.0572\n","Epoch 125: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 411ms/step - loss: 0.0590 - val_loss: 2.2644\n","Epoch 126/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 409ms/step - loss: 0.0674\n","Epoch 126: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 449ms/step - loss: 0.0683 - val_loss: 1.7494\n","Epoch 127/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 492ms/step - loss: 0.0756\n","Epoch 127: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 525ms/step - loss: 0.0766 - val_loss: 0.8011\n","Epoch 128/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 433ms/step - loss: 0.1096\n","Epoch 128: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 465ms/step - loss: 0.1101 - val_loss: 1.0860\n","Epoch 129/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 382ms/step - loss: 0.0704\n","Epoch 129: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 416ms/step - loss: 0.0707 - val_loss: 0.4980\n","Epoch 130/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 399ms/step - loss: 0.0576\n","Epoch 130: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 431ms/step - loss: 0.0586 - val_loss: 0.5485\n","Epoch 131/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 472ms/step - loss: 0.0266\n","Epoch 131: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 505ms/step - loss: 0.0268 - val_loss: 0.5286\n","Epoch 132/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 450ms/step - loss: 0.0473\n","Epoch 132: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 484ms/step - loss: 0.0481 - val_loss: 1.0434\n","Epoch 133/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 384ms/step - loss: 0.0123\n","Epoch 133: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 415ms/step - loss: 0.0128 - val_loss: 0.6366\n","Epoch 134/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 468ms/step - loss: 0.0379\n","Epoch 134: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 501ms/step - loss: 0.0395 - val_loss: 1.2078\n","Epoch 135/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 417ms/step - loss: 0.1021\n","Epoch 135: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 453ms/step - loss: 0.1021 - val_loss: 0.4824\n","Epoch 136/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 390ms/step - loss: 0.1473\n","Epoch 136: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 430ms/step - loss: 0.1451 - val_loss: 0.5652\n","Epoch 137/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 428ms/step - loss: 0.0521\n","Epoch 137: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 458ms/step - loss: 0.0524 - val_loss: 0.7075\n","Epoch 138/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 482ms/step - loss: 0.0796\n","Epoch 138: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 516ms/step - loss: 0.0796 - val_loss: 0.9588\n","Epoch 139/200\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 446ms/step - loss: 0.0702\n","Epoch 139: val_loss did not improve from 0.26323\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 477ms/step - loss: 0.0707 - val_loss: 0.6959\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import precision_score, recall_score, f1_score, classification_report, roc_auc_score\n","import matplotlib.pyplot as plt\n","\n","predictions_test = model.predict(test_data)\n","y_test = test_data.classes\n","\n","thresholds = np.arange(0.1, 1.0, 0.1)\n","best_threshold = 0.5\n","best_f1 = 0\n","\n","for threshold in thresholds:\n","    predicted_classes_test = (predictions_test >= threshold).astype(int)\n","    f1 = f1_score(y_test, predicted_classes_test)\n","    precision = precision_score(y_test, predicted_classes_test)\n","    recall = recall_score(y_test, predicted_classes_test)\n","\n","    print(f'Threshold: {threshold:.2f}')\n","    print(f'Precision: {precision:.4f}, Recall: {recall:.4f}, F1 Score: {f1:.4f}\\n')\n","\n","    if f1 > best_f1:\n","        best_f1 = f1\n","        best_threshold = threshold\n","\n","print(f'Mejor threshold: {best_threshold} con F1 Score: {best_f1}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fp1fqCqnR-SC","executionInfo":{"status":"ok","timestamp":1732041528165,"user_tz":300,"elapsed":13180,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"6433b257-180c-447b-bc86-1cce85bfb116"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m3/3\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 3s/step\n","Threshold: 0.10\n","Precision: 0.2500, Recall: 0.4706, F1 Score: 0.3265\n","\n","Threshold: 0.20\n","Precision: 0.2857, Recall: 0.4706, F1 Score: 0.3556\n","\n","Threshold: 0.30\n","Precision: 0.2857, Recall: 0.4706, F1 Score: 0.3556\n","\n","Threshold: 0.40\n","Precision: 0.2692, Recall: 0.4118, F1 Score: 0.3256\n","\n","Threshold: 0.50\n","Precision: 0.3182, Recall: 0.4118, F1 Score: 0.3590\n","\n","Threshold: 0.60\n","Precision: 0.3182, Recall: 0.4118, F1 Score: 0.3590\n","\n","Threshold: 0.70\n","Precision: 0.2857, Recall: 0.3529, F1 Score: 0.3158\n","\n","Threshold: 0.80\n","Precision: 0.2353, Recall: 0.2353, F1 Score: 0.2353\n","\n","Threshold: 0.90\n","Precision: 0.2143, Recall: 0.1765, F1 Score: 0.1935\n","\n","Mejor threshold: 0.5 con F1 Score: 0.358974358974359\n"]}]},{"cell_type":"code","source":["precisions = []\n","recalls = []\n","f1_scores = []\n","\n","for threshold in thresholds:\n","    predicted_classes_test = (predictions_test >= threshold).astype(int)\n","    precisions.append(precision_score(y_test, predicted_classes_test))\n","    recalls.append(recall_score(y_test, predicted_classes_test))\n","    f1_scores.append(f1_score(y_test, predicted_classes_test))\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(thresholds, precisions, label='Precision')\n","plt.plot(thresholds, recalls, label='Recall')\n","plt.plot(thresholds, f1_scores, label='F1 Score')\n","plt.xlabel('Threshold')\n","plt.ylabel('Metric Value')\n","plt.title('Metrics vs. Threshold')\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"ejsHqYe0R-Lf","executionInfo":{"status":"ok","timestamp":1732041535728,"user_tz":300,"elapsed":643,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"821e69c5-23f6-428a-fe68-b3db1c3257f9"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["predicted_classes_test = (predictions_test >= best_threshold).astype(int)\n","\n","# Imprimir el reporte de clasificación con el mejor threshold\n","print(\"Test set classification report with custom threshold:\")\n","print(classification_report(y_test, predicted_classes_test, target_names=['Clase 0', 'Clase 1']))\n","\n","# Calcular la precisión y el recall con el mejor threshold\n","precision = precision_score(y_test, predicted_classes_test)\n","recall = recall_score(y_test, predicted_classes_test)\n","\n","print(\"Precision (Test Set, Class 1) with custom threshold:\", precision)\n","print(\"Recall (Test Set, Class 1) with custom threshold:\", recall)\n","\n","# AUC Score no se afecta por el threshold, pero se puede recalcular para referencia\n","auc_score_test = roc_auc_score(y_test, predictions_test)\n","print(\"Test set AUC Score:\", auc_score_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"88mWvtaBR-DQ","executionInfo":{"status":"ok","timestamp":1732041544219,"user_tz":300,"elapsed":234,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"d4663c91-ebbe-432f-96c9-e318d9f9a6ea"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set classification report with custom threshold:\n","              precision    recall  f1-score   support\n","\n","     Clase 0       0.84      0.78      0.81        67\n","     Clase 1       0.32      0.41      0.36        17\n","\n","    accuracy                           0.70        84\n","   macro avg       0.58      0.59      0.58        84\n","weighted avg       0.73      0.70      0.72        84\n","\n","Precision (Test Set, Class 1) with custom threshold: 0.3181818181818182\n","Recall (Test Set, Class 1) with custom threshold: 0.4117647058823529\n","Test set AUC Score: 0.5706760316066725\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import roc_curve, auc\n","import matplotlib.pyplot as plt\n","\n","# Calcular la curva ROC y el AUC\n","fpr, tpr, _ = roc_curve(y_test, predictions_test)\n","roc_auc = auc(fpr, tpr)\n","\n","# Graficar la curva ROC\n","plt.figure(figsize=(10, 6))\n","plt.plot(fpr, tpr, color='blue', label=f'ROC Curve (AUC = {roc_auc:.4f})')\n","plt.plot([0, 1], [0, 1], color='gray', linestyle='--')  # Línea de referencia (clasificador aleatorio)\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic (ROC) Curve')\n","plt.legend(loc='lower right')\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"id":"6SVJNyf6uKS2","executionInfo":{"status":"ok","timestamp":1732041558114,"user_tz":300,"elapsed":555,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"c9ba17e5-b39f-4b64-d8dc-9406fd5d643f","colab":{"base_uri":"https://localhost:8080/","height":564}},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#RESULTADOS ANTERIORES"],"metadata":{"id":"Rxythh5sR-qX"}},{"cell_type":"code","source":["from sklearn.metrics import classification_report, roc_auc_score\n","import matplotlib.pyplot as plt\n","\n","predictions_test = model.predict(test_data)\n","predicted_classes_test = np.round(predictions_test).astype(int)\n","\n","y_test = test_data.classes\n","\n","print(\"Test set classification report after fine-tuning:\")\n","print(classification_report(y_test, predicted_classes_test, target_names=['Clase 0', 'Clase 1']))\n","\n","auc_score_test = roc_auc_score(y_test, predictions_test)\n","print(\"Test set AUC Score after fine-tuning:\", auc_score_test)\n","\n","predictions_train = model.predict(train_data, steps=len(train_data), verbose=1)\n","predicted_classes_train = np.round(predictions_train).astype(int)\n","\n","y_train = train_data.classes\n","\n","print(\"Train set classification report after fine-tuning:\")\n","print(classification_report(y_train, predicted_classes_train, target_names=['Clase 0', 'Clase 1']))\n","\n","auc_score_train = roc_auc_score(y_train, predictions_train)\n","print(\"Train set AUC Score after fine-tuning:\", auc_score_train)\n"],"metadata":{"id":"4-LSwrhIkB7e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731454588445,"user_tz":300,"elapsed":26251,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"9e5e031b-743f-40cc-c64f-f37e0b68bdb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m3/3\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 3s/step\n","Test set classification report after fine-tuning:\n","              precision    recall  f1-score   support\n","\n","     Clase 0       0.80      0.82      0.81        67\n","     Clase 1       0.20      0.18      0.19        17\n","\n","    accuracy                           0.69        84\n","   macro avg       0.50      0.50      0.50        84\n","weighted avg       0.68      0.69      0.68        84\n","\n","Test set AUC Score after fine-tuning: 0.5970149253731344\n","\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 703ms/step\n","Train set classification report after fine-tuning:\n","              precision    recall  f1-score   support\n","\n","     Clase 0       0.78      0.73      0.75       265\n","     Clase 1       0.18      0.23      0.20        70\n","\n","    accuracy                           0.62       335\n","   macro avg       0.48      0.48      0.48       335\n","weighted avg       0.66      0.62      0.64       335\n","\n","Train set AUC Score after fine-tuning: 0.5132075471698114\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import precision_score, recall_score\n","\n","predictions_test = model.predict(test_data)\n","predicted_classes_test = np.round(predictions_test).astype(int)\n","y_test = test_data.classes\n","\n","precision = precision_score(y_test, predicted_classes_test, average='binary', pos_label=1)\n","recall = recall_score(y_test, predicted_classes_test, average='binary', pos_label=1)\n","\n","print(\"Precision (Test Set, Class 1):\", precision)\n","print(\"Recall (Test Set, Class 1):\", recall)\n"],"metadata":{"id":"47nEkm-NKrno","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731454598245,"user_tz":300,"elapsed":1949,"user":{"displayName":"Valentina Acosta","userId":"10836141805216422219"}},"outputId":"da006be1-5a3b-40b7-9dad-52df68df5ea3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m3/3\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 373ms/step\n","Precision (Test Set, Class 1): 0.2\n","Recall (Test Set, Class 1): 0.17647058823529413\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"YuUH2OdovHME"},"execution_count":null,"outputs":[]}]}